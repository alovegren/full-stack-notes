{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","className","content","onClick","Notification","message","services_notes","request","axios","get","fakeNote","id","date","then","response","data","concat","newObject","post","put","Footer","style","color","fontStyle","fontSize","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","components_Notification","map","components_Note","key","find","changedNote","objectSpread","returnedNote","catch","_error","setTimeout","n","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","value","onChange","target","type","App_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a846031c.chunk.js","sourcesContent":["import React from 'react';\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important' : 'make important';\n\n  return (\n    <li className='note'>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note;","import React from 'react';\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className='error'>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification;","import axios from 'axios';\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  const fakeNote = {\n    \"id\": 14444,\n    \"content\": \"fake note alert!\",\n    \"date\": \"2022-1-17T17:30:31.098Z\",\n    \"important\": false\n  }\n\n  return request.then(response => response.data.concat(fakeNote));\n}\n\nconst create = newObject => (\n  axios.post(baseUrl, newObject).then(response => response.data)\n);\n\nconst update = (id, newObject) => (\n  axios.put(`${baseUrl}/${id}`, newObject).then(response => response.data)\n);\n\nexport default { getAll, create, update }","import { useState, useEffect } from 'react';\nimport React from 'react';\nimport Note from './components/Note';\nimport Notification from './components/Notification';\nimport noteService from './services/notes.js';\nimport './index.css';\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16,\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Missy's desk 2022</em>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes);\n    });\n  }, []); // useEffect must be an asynchronous function\n\n  const addNote = event => {\n    event.preventDefault();\n\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    }\n\n    noteService.create(noteObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote('');\n    });\n  }\n\n  const handleNoteChange = event => setNewNote(event.target.value);\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(note => note.id === id);\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote));\n      })\n      .catch(_error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from the server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000);\n        setNotes(notes.filter(n => n.id !== id));\n      });\n  }\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note => \n          <Note \n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input \n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;","import ReactDOM from 'react-dom'\nimport React from 'react'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}